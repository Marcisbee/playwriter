/**
 * Converts terminal escape codes to HTML for display in the UI
 * @param {string} text The text containing terminal escape codes
 * @returns {string} HTML with appropriate spans for styling
 */
export function terminalEscapeCodesToHTML(text) {
	return (
		"<span>" +
		text
			.replace(/&/g, "&amp;")
			.replace(/</g, "&lt;")
			.replace(/>/g, "&gt;")
			.replace(/1A\x1B\[2K/g, "")
			.replace(/\x1B\[([^m]*)m/g, (_, escape) => {
				switch (escape) {
					case "1":
						return '</span><span class="color-bold">';
					case "31":
						return '</span><span class="color-red">';
					case "32":
						return '</span><span class="color-green">';
					case "33":
						return '</span><span class="color-yellow">';
					case "35":
						return '</span><span class="color-magenta">'; // This is generated by warnings in version 0.14.0 and earlier
					case "37":
						return '</span><span class="color-dim">';
					case "41;31":
						return '</span><span class="bg-red color-red">';
					case "41;97":
						return '</span><span class="bg-red color-white">';
					case "43;33":
						return '</span><span class="bg-yellow color-yellow">';
					case "43;30":
						return '</span><span class="bg-yellow color-black">';
					case "0":
						return "</span><span>";
				}
				return escape;
			}) +
		"</span>"
	);
}
